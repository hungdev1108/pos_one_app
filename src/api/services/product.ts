import { apiClient } from "../client";
import { ProductDetail } from "../types";

/**
 * Product Service
 * Qu·∫£n l√Ω c√°c API li√™n quan ƒë·∫øn s·∫£n ph·∫©m
 */
class ProductService {
  private baseUrl = "/api/contents/products";

  /**
   * L·∫•y chi ti·∫øt s·∫£n ph·∫©m theo ID
   * @param productId ID c·ªßa s·∫£n ph·∫©m
   * @param language M√£ ng√¥n ng·ªØ (m·∫∑c ƒë·ªãnh "vi")
   * @returns Chi ti·∫øt s·∫£n ph·∫©m
   */
  async getProductDetail(productId: string, language: string = "vi"): Promise<ProductDetail> {
    try {
      console.log(`üîç Fetching product detail for ID: ${productId}, language: ${language}`);
      
      const response = await apiClient.get<ProductDetail>(
        `${this.baseUrl}/${productId}/${language}`
      );

      console.log("‚úÖ Product detail response:", response);

      // Ki·ªÉm tra c·∫•u tr√∫c response
      if (response && response.id) {
        return response;
      }

      // N·∫øu response c√≥ c·∫•u tr√∫c { data: ProductDetail }
      if (response && (response as any).data && (response as any).data.id) {
        return (response as any).data;
      }

      throw new Error("Kh√¥ng t√¨m th·∫•y th√¥ng tin s·∫£n ph·∫©m");
    } catch (error: any) {
      console.error("‚ùå Error fetching product detail:", error);
      throw new Error(`L·ªói khi l·∫•y chi ti·∫øt s·∫£n ph·∫©m: ${error.message || error}`);
    }
  }
}

export const productService = new ProductService();
